Section B


#!/bin/bash

# Function to create a new user
create_user() {
    if [ -z "$1" ]; then
        echo "Error: Please provide a username."
        exit 1
    fi
    
    sudo useradd -m "$1"
    echo "User $1 created successfully."
}

# Function to list users
list_users() {
    if [ "$1" == "--sudo-only" ]; then
        getent passwd | cut -d: -f1,3,7 | awk -F: '$2 >= 1000 {print $1}' | xargs -I{} groups {} | grep -w sudo | cut -d: -f1
    else
        getent passwd | cut -d: -f1
    fi
}

# Function to display file information
get_file_info() {
    local file=$2
    
    if [ -z "$file" ]; then
        echo "Error: Please provide a file name."
        exit 1
    fi
    
    local file_info=$(stat --format="File: %n%nAccess: %A%nSize(B): %s%nOwner: %U%nModify: %y" "$file")
    echo "$file_info"
}

# Function to display specific file information
get_specific_file_info() {
    local option=$1
    local file=$2
    
    if [ -z "$file" ]; then
        echo "Error: Please provide a file name."
        exit 1
    fi
    
    case "$option" in
        "--size" | "-s")
            stat --format="%s" "$file"
            ;;
        "--permissions" | "-p")
            stat --format="%A" "$file"
            ;;
        "--owner" | "-o")
            stat --format="%U" "$file"
            ;;
        "--last-modified" | "-m")
            stat --format="%y" "$file"
            ;;
        *)
            echo "Error: Invalid option. Use 'internsctl file getinfo --help' for options."
            exit 1
            ;;
    esac
}

# Main script logic
case "$1" in
    "user")
        case "$2" in
            "create")
                create_user "$3"
                ;;
            "list")
                list_users "$3"
                ;;
            *)
                echo "Error: Invalid command. Use 'internsctl --help' for usage guidelines."
                exit 1
                ;;
        esac
        ;;
    "file")
        case "$2" in
            "getinfo")
                if [ "$3" == "--help" ]; then
                    echo "Usage: internsctl file getinfo [options] <file-name>"
                    echo "Options:"
                    echo "  --size, -s           Print file size."
                    echo "  --permissions, -p    Print file permissions."
                    echo "  --owner, -o          Print file owner."
                    echo "  --last-modified, -m  Print last modified time."
                    exit 0
                elif [ -z "$3" ]; then
                    echo "Error: Please provide a file name."
                    exit 1
                elif [ -n "$4" ]; then
                    get_specific_file_info "$4" "$3"
                else
                    get_file_info "$@"
                fi
                ;;
            *)
                echo "Error: Invalid command. Use 'internsctl --help' for usage guidelines."
                exit 1
                ;;
        esac
        ;;
    "--help")
        echo "Usage: internsctl [COMMAND] [options] [ARGUMENT]"
        echo "Custom Linux command for operations."
        echo
        echo "Commands:"
        echo "  cpu         Get CPU information."
        echo "  memory      Get memory information."
        echo "  user        Manage users."
        echo "  file        Get file information."
        exit 0
        ;;
    "--version")
        echo "internsctl v0.1.0"
        exit 0
        ;;
    *)
        echo "Error: Invalid command. Use 'internsctl --help' for usage guidelines."
        exit 1
        ;;
esac
